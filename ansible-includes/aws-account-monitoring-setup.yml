---
  - name: Block for monitoring setup on the bastion account
    block:
      - name: Assume role for bastion account
        sts_assume_role:
          role_arn: "arn:aws:iam::{{ bastion_account.account_id }}:role/OrganizationAccountAccessRole"
          role_session_name: "{{ bastion_account.name }}-OrgAccAccRole"
        register: "monitoring_assumed_role_bastion"
      - name: Create CFN template from Ansible template for the monitoring setup on the bastion account
        template:
          src: "CloudFormationTemplates/cfn-monitoring-for-subaccount.yml"
          dest: "{{ generated_files_dir | default('generated-files') }}/cfn-{{ organization.name }}-monitoring-for-bastion-account.yml"
      - name: Linter check cloudformation stack monitoring setup on the bastion account
        shell:
          cfn-lint --ignore-checks={{ lint_ignore_list | default('') }} "{{ generated_files_dir | default('generated-files') }}/cfn-{{ organization.name }}-monitoring-for-bastion-account.yml"
      - name: Create/Update Monitoring CloudFormation Stack on the bastion account
        cloudformation:
          aws_access_key: "{{ monitoring_assumed_role_bastion.sts_creds.access_key }}"
          aws_secret_key: "{{ monitoring_assumed_role_bastion.sts_creds.secret_key }}"
          security_token: "{{ monitoring_assumed_role_bastion.sts_creds.session_token }}"
          region: "eu-central-1"
          stack_name: "{{ cfn_org_name }}MonitoringSubaccount"
          state: "present"
          disable_rollback: false
          template: "{{ generated_files_dir | default('generated-files') }}/cfn-{{ organization.name }}-monitoring-for-bastion-account.yml"

    tags: [ 'monitoring', 'monitoring_subaccount', 'monitoring_bastion']


  - name: Block for monitoring setup on the subaccounts
    block:
      - name: Assume role for subaccounts
        sts_assume_role:
          role_arn: "arn:aws:iam::{{ item.account_id }}:role/{{ item.sts_role | default('OrganizationAccountAccessRole') }}"
          role_session_name: "{{ item.name }}-{{ item.sts_role | default('OrgAccAccRole') }}"
          duration_seconds: "{{ item.sts_session_duration | default('3600') }}"
        register: "monitoring_assumed_role_subaccount_single"
        when: "subaccount_limit == 'all' or item.name.startswith(subaccount_limit)"
        loop: "{{ subaccounts|flatten(levels=1) }}"
        loop_control:
          label: "Assumed role {{ item.name }}"

      - name: Create CFN template from Ansible template for the monitoring setup on the subaccounts
        template:
          src: "CloudFormationTemplates/cfn-monitoring-for-subaccount.yml"
          dest: "{{ generated_files_dir | default('generated-files') }}/cfn-{{ organization.name }}-monitoring-for-subaccount-{{ item[0].item.account_id }}-{{ item[1] }}.yml"
        when: "subaccount_limit == 'all' or item[0].item.name.startswith(subaccount_limit)"
        loop: "{{ monitoring_assumed_role_subaccount_single.results|product(aws_local_regions)|list }}"
        loop_control:
          label: "Create CFN template for monitoring setup on {{ item[0].item.name }}"

      - name: Linter check cloudformation stack monitoring setup on the subaccounts
        shell:
          cfn-lint --ignore-checks={{ lint_ignore_list | default('') }} "{{ generated_files_dir | default('generated-files') }}/cfn-{{ organization.name }}-monitoring-for-subaccount-{{ item[0].item.account_id }}-{{ item[1] }}.yml"
        when: "subaccount_limit == 'all' or item[0].item.name.startswith(subaccount_limit)"
        loop: "{{ monitoring_assumed_role_subaccount_single.results|product(aws_local_regions)|list }}"
        loop_control:
          label: "Linter check cloudformation stack monitoring setup on {{ item[0].item.name }}"

      - name: Create/Update Monitoring CloudFormation Stack on all accounts
        cloudformation:
          aws_access_key: "{{ item[0].sts_creds.access_key }}"
          aws_secret_key: "{{ item[0].sts_creds.secret_key }}"
          security_token: "{{ item[0].sts_creds.session_token }}"
          region: "{{ item[1] }}"
          stack_name: "{{ cfn_org_name }}MonitoringSubaccount"
          state: "present"
          disable_rollback: false
          template: "{{ generated_files_dir | default('generated-files') }}/cfn-{{ organization.name }}-monitoring-for-subaccount-{{ item[0].item.account_id }}-{{ item[1] }}.yml"
        when: "subaccount_limit == 'all' or item[0].item.name.startswith(subaccount_limit)"
        loop: "{{ monitoring_assumed_role_subaccount_single.results|product(aws_local_regions)|list }}"
        loop_control:
          label: "Create/Update Monitoring CloudFormation Stack on {{ item[0].item.name }}"
### TODO: Temporarily limited to eu-central-1 because Lambda code on S3 should be in same region
### as the region where the function is created. Have to setup the S3 bucket in
### all regions in aws_local_regions and setup S3 replication
        register: async_monitoringcloudformationstack
        async: 7200
        poll: 0
      - name: Wait for async_monitoringcloudformationstack tasks to finish
        async_status: jid={{ item.ansible_job_id }}
        register: async_monitoringcloudformationstack_jobs
        until: async_monitoringcloudformationstack_jobs.finished
        retries: 300
        loop: "{{ async_monitoringcloudformationstack.results|default([])|flatten(levels=1) }}"
        loop_control:
          label: "Created/Updated Monitoring CloudFormation Stack on {{ item.item[0].item.name }}"
        when: "subaccount_limit == 'all' or item.item[0].item.name.startswith(subaccount_limit)"

    tags: [ 'monitoring', 'monitoring_subaccount' ]

